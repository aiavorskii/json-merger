{
  "openapi": "3.0.0",
  "info": {
    "title": "Providers API",
    "version": "1.0.0",
    "description": "API for accessing financial provider information."
  },
  "components": {
    "schemas": {
      "Provider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Provider’s id"
          },
          "code": {
            "type": "string",
            "description": "Provider’s code"
          },
          "name": {
            "type": "string",
            "description": "Provider’s name"
          },
          "modes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderMode"
            },
            "description": "Possible values are: oauth, web, api, file"
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderStatus"
            },
            "description": "Possible values are: active, inactive, disabled"
          },
          "automatic_fetch": {
            "type": "boolean",
            "description": "Whether the provider’s connections can be automatically fetched."
          },
          "customer_notified_on_sign_in": {
            "type": "boolean",
            "description": "Whether the provider will notify the customer on log in attempt."
          },
          "interactive": {
            "type": "boolean",
            "description": "Whether the provider requires interactive input."
          },
          "instruction": {
            "type": "string",
            "description": "Instructions on how to connect the bank, in English."
          },
          "home_url": {
            "type": "string",
            "description": "The URL of the main page of the provider."
          },
          "login_url": {
            "type": "string",
            "description": "Point of entrance to provider’s login web interface."
          },
          "logo_url": {
            "type": "string",
            "description": "The URL for the provider logo, may have a placeholder for providers with missing logos."
          },
          "country_code": {
            "type": "string",
            "description": "Code of the provider’s country."
          },
          "refresh_timeout": {
            "type": "integer",
            "description": "Amount of time (in minutes) after which the provider’s connections are allowed to be refreshed."
          },
          "holder_info": {
            "$ref": "#/components/schemas/HolderInfo",
            "description": "Contains information on the account holder details that can be fetched from this provider."
          },
          "max_consent_days": {
            "type": "integer",
            "description": "Maximum allowed consent duration. If it is null then there are no limits."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Time and date when the provider was integrated."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The last time when any of provider’s attributes were changed."
          },
          "timezone": {
            "type": "string",
            "description": "Time zone data of capital/major city in a region corresponding to a provider."
          },
          "max_interactive_delay": {
            "type": "integer",
            "description": "Delay in seconds before InteractiveAdapterTimeout will happen."
          },
          "optional_interactivity": {
            "type": "boolean",
            "description": "Provider which supports flipping of interactive and automatic_fetch flags after connect."
          },
          "regulated": {
            "type": "boolean",
            "description": "Whether the provider is integrated via a regulated channel under Open Banking/PSD2."
          },
          "max_fetch_interval": {
            "type": "integer",
            "description": "Max period in days that can be fetched from the provider’s interface."
          },
          "custom_pendings": {
            "type": "boolean",
            "description": "Equals to true if the provider supports a custom pending logic. For example, when the transactions for the last 7 days are marked as pending."
          },
          "custom_pendings_period": {
            "type": "integer",
            "description": "Populated when custom_pendings is true. Shows the number of days according to the custom pending period implemented in the provider."
          },
          "supported_fetch_scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FetchScope"
            },
            "description": "Array of strings with supported fetch_scopes."
          },
          "supported_account_extra_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountExtraFields"
            },
            "description": "Array of possible account extra fields to be fetched."
          },
          "supported_transaction_extra_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionExtraFields"
            },
            "description": "Array of possible transaction extra fields to be fetched."
          },
          "supported_account_natures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountNature"
            },
            "description": "Array of possible account natures to be fetched. Non-payment natures: bonus, credit, insurance, investment."
          },
          "supported_account_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountType"
            },
            "description": "Array of possible account types to be fetched. Possible values are: personal, business."
          },
          "identification_codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of codes identifying supported branches of a specific provider. It may include BLZ(Germany), ABI+CAB(Italy), Branch Codes(France) etc."
          },
          "bic_codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of BIC codes identifying supported branches of a specific provider."
          },
          "supported_iframe_embedding": {
            "type": "boolean",
            "description": "Possible values are: true, false"
          },
          "payment_templates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifiers of the payment templates that are supported by this provider."
          },
          "supported_payment_fields": {
            "type": "object",
            "description": "If these fields are passed, they will be used by the provider. Otherwise, the payment will be processed even without them."
          },
          "required_payment_fields": {
            "type": "object",
            "description": "Mandatory payment attributes. If any of these fields are not passed, the payment will not be initiated successfully."
          },
          "no_funds_rejection_supported": {
            "type": "boolean",
            "description": "A flag which indicates whether the bank supports explicit handling of payment rejection due to insufficient funds."
          }
        }
      },
      "HolderInfo": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Returns the name(s) on the customer’s account with the provider, e.g. ['John Doe']."
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Returns email(s) registered within customer’s account with the provider, e.g. ['john.doe@example.com', 'johndoe@gmail.com']."
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Returns the phone number(s) registered in the customer’s account with the provider, e.g. ['+16135550175', '+40981233422']."
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "Returns the address(es) on the customer’s account with the provider."
          }
        }
      },
      "ProviderMode": {
        "type": "string",
        "enum": ["oauth", "web", "api", "file"]
      },
      "ProviderStatus": {
        "type": "string",
        "enum": ["active", "inactive", "disabled"]
      },
      "AccountExtraField": {
        "type": "object",
        "properties": {
          "account_name": {
            "type": "string",
            "description": "Changeable name of the account."
          },
          "account_number": {
            "type": "string",
            "description": "Internal bank account number."
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Array of crypto codes and their amounts assigned to the investment account."
          },
          "available_amount": {
            "type": "decimal",
            "description": "Available amount in the account’s currency."
          },
          "balance_type": {
            "$ref": "#/components/schemas/BalanceType",
            "description": "Type of balance."
          },
          "blocked_amount": {
            "type": "decimal",
            "description": "The amount currently blocked in the account’s currency."
          },
          "card_type": {
            "$ref": "#/components/schemas/CardType",
            "description": "Type of the card account."
          },
          "cards": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of masked card numbers."
          },
          "client_name": {
            "type": "string",
            "description": "Account client owner."
          },
          "closing_balance": {
            "type": "decimal",
            "description": "Account balance at the end of the accounting period."
          },
          "credit_limit": {
            "type": "decimal",
            "description": "Credit limit in the account’s currency."
          },
          "current_date": {
            "type": "date",
            "description": "Date of provider statement generation (applicable to banks)."
          },
          "current_time": {
            "type": "datetime",
            "description": "Time of provider statement generation (applicable to banks)."
          },
          "expiry_date": {
            "type": "date",
            "description": "Card expiry date."
          },
          "iban": {
            "type": "string",
            "description": "Account IBAN number."
          },
          "bban": {
            "type": "string",
            "description": "Basic Bank Account Number."
          },
          "interest_rate": {
            "type": "decimal",
            "description": "Interest rate of the account as a percentage value."
          },
          "interest_type": {
            "type": "string",
            "description": "Type of account interest used with interest_rate."
          },
          "floating_interest_rate": {
            "type": "object",
            "properties": {
              "min_value": {
                "type": "decimal"
              },
              "max_value": {
                "type": "decimal"
              }
            },
            "description": "Minimum and maximum value of the interest rate."
          },
          "remaining_payments": {
            "type": "decimal",
            "description": "The number of remaining payments to pay off the loan."
          },
          "penalty_amount": {
            "type": "decimal",
            "description": "The amount of the penalty."
          },
          "next_payment_amount": {
            "type": "decimal",
            "description": "Next payment amount for loans or credits."
          },
          "next_payment_date": {
            "type": "date",
            "description": "Next payment date for loans or credits."
          },
          "open_date": {
            "type": "date",
            "description": "Card open date."
          },
          "opening_balance": {
            "type": "decimal",
            "description": "Account balance that is brought forward from the end of one accounting period to the beginning of a new accounting period."
          },
          "partial": {
            "type": "boolean",
            "description": "Account transactions were not imported or imported partially because of some internal error on the bank’s side."
          },
          "raw_balance": {
            "type": "string",
            "description": "The original account balance response returned by the bank. It is added only for regulated: true providers. It is returned only if the separate balances parameter is present in the bank’s original response."
          },
          "sort_code": {
            "type": "string",
            "description": "Routing number(US)/BSB code(Australia)/sort code(UK)."
          },
          "statement_cut_date": {
            "type": "date",
            "description": "Date when the current statement becomes the previous one."
          },
          "status": {
            "type": "string",
            "description": "Shows whether the account is active, inactive, or unauthorized."
          },
          "swift": {
            "type": "string",
            "description": "Account SWIFT code."
          },
          "total_payment_amount": {
            "type": "decimal",
            "description": "Total payment amount for loans or credits."
          },
          "transactions_count": {
            "type": "object",
            "properties": {
              "posted": {
                "type": "integer",
                "description": "Number of posted transactions."
              },
              "pending": {
                "type": "integer",
                "description": "Number of pending transactions."
              }
            },
            "description": "Number of transactions, separated by posted and pending."
          },
          "payment_type": {
            "type": "string",
            "description": "Account payment method."
          },
          "cashback_amount": {
            "type": "decimal",
            "description": "Accumulated CashBack / Cash Benefit."
          }
        }
      },
      "BalanceType": {
        "type": "string",
        "enum": [
          "interimAvailable",
          "closingBooked",
          "interimBooked",
          "authorised",
          "expected",
          "BOOKED",
          "CLAV",
          "CLBD",
          "XPCD",
          "OTHR"
        ],
        "description": "Type of balance."
      },
      "CardType": {
        "type": "string",
        "enum": [
          "american_express",
          "china_unionpay",
          "diners_club",
          "jcb",
          "maestro",
          "master_card",
          "uatp",
          "visa",
          "mir"
        ],
        "description": "Type of the card account."
      },
      "TransactionExtraFields": {
        "type": "string",
        "enum": ["fieldA", "fieldB", "fieldC"]
      },
      "AccountNature": {
        "type": "string",
        "enum": ["bonus", "credit", "insurance", "investment"]
      },
      "AccountType": {
        "type": "string",
        "enum": ["personal", "business"]
      },
      "FetchScope": {
        "type": "string",
        "enum": ["accounts", "transactions"]
      },
      "Address": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City in the address"
          },
          "state": {
            "type": "string",
            "description": "State in the address"
          },
          "street": {
            "type": "string",
            "description": "Street in the address"
          },
          "country_code": {
            "type": "string",
            "description": "Country code in the address"
          },
          "post_code": {
            "type": "string",
            "description": "Post code in the address"
          }
        }
      }
    }
  }
}
